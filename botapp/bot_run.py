import asyncio
from aiogram.types import BotCommand, BotCommandScopeDefault
from loguru import logger
from bot import bot, dp
from config import *
from db.middleware.middleware import *
from user.router import user_router
from gpt_talking.router import chat_gpt_router
# from user.user_router import *
# from quiz.router import *
from admin.router import *

async def set_commands():
    commands = [BotCommand(command='start', description='–°—Ç–∞—Ä—Ç')]
    await bot.set_my_commands(commands, BotCommandScopeDefault())

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
async def start_bot():
    await set_commands()
    for admin_id in settings.ADMINS:
        try:
            await bot.send_message(admin_id, f'–Ø –∑–∞–ø—É—â–µ–Ωü•≥.')
        except:
            pass
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É
async def stop_bot():
    try:
        for admin_id in settings.ADMINS:
            await bot.send_message(admin_id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ó–∞ —á—Ç–æ?üòî')
    except:
        pass
    logger.error("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")


async def main():
    print("–∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ø—Ä–∏–ª–æ–∂—É—Ö–∞")
    # scheduler.add_job(send_time_msg, 'interval', seconds=10)
    # scheduler.start()

    dp.update.middleware(DBMiddlewareWithComm())
    dp.update.middleware(DBMiddlewareWithoutComm())
    dp.update.middleware(RateLimitMiddleware(8))
    dp.include_router(chat_gpt_router)
    dp.include_router(admin_router)
    dp.include_router(user_router)
    # dp.startup.register(start_bot)
    # dp.shutdown.register(stop_bot)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())