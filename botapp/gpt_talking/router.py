from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from .kbs import *
from admin.kbs import *
from bot import client_gpt
from utils.utils import *
from db.sheets.tasks import *
from db.sheets.build import *
from db.models.models.manager import *
from loguru import logger
from .form import *
from .fn_utils import *
from .delay import *


chat_gpt_router = Router()


@chat_gpt_router.callback_query(F.data == "talking_with_gpt")
async def gpt_bot_tallking(call: CallbackQuery, state: FSMContext):
    await state.clear()
    await call.message.answer("–í—ã –ø–æ–ø–∞–ª–∏ –∫ –Ω–∞—à–µ–º—É –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏ –æ–Ω –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å!", reply_markup=gpt_questions())
    await state.set_state(Tallking_gpt.msg)

@chat_gpt_router.message(Tallking_gpt.msg, flags={"rate_limit": 5.5})
async def gpt_bot_tallking(message: Message, state: FSMContext):
    if await check_user_delay(message.from_user.id) and message.text:
        msg = await message.answer("<i>–ü–æ–¥–æ–∂–¥–∏—Ç–µ...</i>")
        data = await state.get_data()
        data = data.get("msg", None)
        try:
            response = await get_chat_completion_cons(message=message)
            await msg.delete()
            await message.answer(text=response, reply_markup=gpt_kb(message.from_user.id), parse_mode="Markdown")
            await state.set_state(Tallking_gpt.msg)
        except Exception as e:
            logger.info(e)
            await state.clear()
            await message.answer("<b> –£–≤—ã, –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –¥–æ—Å—É—Ç–ø–µ–Ω</b>")
            await message.answer(
                f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, {message.from_user.full_name}! –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –±–æ—Ç–µ '–ü—Ä–∏–µ–º –∑–∞—è–≤–æ–∫', –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.",
                reply_markup=main_user_kb(message.from_user.id)
            )
    else:
        await message.answer("<b>–ù–µ —Å–ø–∞–º—å—Ç–µ! </b>")