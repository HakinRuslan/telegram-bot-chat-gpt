from typing import List
from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup, InlineKeyboardButton, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from config import *
from utils.utils import *
from db.models.ormmodels.models import *
from sqlalchemy.ext.asyncio import AsyncSession
from db.models.models.manager import *


async def reply_kb(tg_id, msg) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    str_params = f"reply_{tg_id}_{msg}"
    link_redis_str_params = await generate_short_link(str_params)
    kb.button(text="‚úÖ –û—Ç–≤–µ—Ç–∏—Ç—å", url=f"{link_redis_str_params}")
    kb.adjust(2)
    return kb.as_markup()


def main_user_kb(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    if user_id in settings.ADMINS:
        kb.button(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
    else:
        kb.button(text="üìÇ –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="my_apls")
        kb.button(text="‚ú® –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="did_apl")
        kb.button(text="üé´ –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç", callback_data=f"send_mess_{user_id}")
        kb.button(text="‚Åâ –£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã", callback_data=f"talking_with_gpt")
    kb.adjust(3, 1)
    return kb.as_markup()

def cancel_kb_inline() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel")
    return kb.as_markup()

def cancel_kb_ticket_inline() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_ticket")
    return kb.as_markup()

def cancel_kb_extra_info_inline() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_more_info")
    return kb.as_markup()

def options_apls_kbs(apl_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"cancel-apl_{apl_id}")
    kb.button(text="üöó –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å", callback_data=f"red-addres-apl_{apl_id}")
    kb.adjust(1)
    return kb.as_markup()

# async def options_apls_kbs_admin(apl_id: int, session: AsyncSession) -> InlineKeyboardMarkup:
#     kb = InlineKeyboardBuilder()
#     apl = await ApplicationsDao.find_one_or_none_by_id(session=session, data_id=apl_id)
#     if apl.active:
#         kb.button(text="‚òùüèª –°–¥–µ–ª–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–µ –∞–∫—Ç", callback_data=f"ogr-apl_{apl.id}")
#     else:
#         kb.button(text="‚òùüèª –°–¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π", callback_data=f"ogr-user_{apl.id}")
#     kb.button(text="üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â –∫–ª–∏–µ–Ω—Ç—É", callback_data=f"send-mess_{apl.user_id}")
#     kb.button(text="‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"cancel-apl_{apl_id}")
#     kb.adjust(1)
#     return kb.as_markup()

def yes_or_not_kbs(quest) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    if not quest:
        kb.button(text="üîÑ –†–µ–¥ –¥–æ–ø –∏–Ω—Ñ–æ", callback_data=f"add_more_info")
    kb.button(text="‚ùó –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data=f"did_apl")
    kb.button(text="‚úÖ –í–µ—Ä–Ω–æ", callback_data=f"confirm_add")
    kb.adjust(1, 2)
    return kb.as_markup()

def ok_or_no_kbs() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üîÑ –ó–∞–Ω–æ–≤–æ —Ä–µ–¥ –¥–æ–ø –∏–Ω—Ñ–æ", callback_data=f"add_more_info")
    kb.button(text="‚ùó –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data=f"did_apl")
    kb.button(text="‚úÖ –í–µ—Ä–Ω–æ", callback_data=f"confirm_add")
    kb.adjust(1, 2)
    return kb.as_markup()


def yes_or_no_kbs() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–ó–Ω–∞—é", callback_data=f"yes")
    kb.button(text="–ù–µ—Ç", callback_data=f"no")
    kb.button(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel")
    kb.adjust(2, 1)
    return kb.as_markup()

def time_get(apls) -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    btns = []
    for i in apls:
        if not i.time in btns:
            btns.append(i.time)
            kb.button(text=f"{i.time}")
    kb.adjust(1)
    
    return kb.as_markup(resize_keyboard=True)

def adders_get(apls) -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    btns = []
    for i in apls:
        if not i.addres in btns:
            btns.append(i.addres)
            kb.button(text=f"{i.addres}")
    kb.adjust(1)
    
    return kb.as_markup(resize_keyboard=True)

def idk_kbs() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.button(text="–ù–µ –∑–Ω–∞—é")
    kb.adjust(1)
    
    return kb.as_markup(resize_keyboard=True)

def material_carpet() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.button(text="–®–µ—Ä—Å—Ç—å")
    kb.button(text="–°–º–µ—à–∞–Ω–Ω–∞—è —à–µ—Ä—Å—Ç—å")
    kb.button(text="–í–∏—Å–∫–æ–∑–∞")
    kb.button(text="–•–ª–æ–ø–æ–∫")
    kb.button(text="–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —à—ë–ª–∫")
    kb.button(text="–†—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
    kb.button(text="–î—Ä—É–≥–æ–µ")
    kb.adjust(3, 3, 1)
    
    return kb.as_markup(resize_keyboard=True)

def dmg_carpet() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.button(text="–ü—è—Ç–Ω–∞")
    kb.button(text="–ü—Ä–æ–∂–æ–≥–∏")
    kb.button(text="–°–ª–µ–¥—ã –ø–ª–µ—Å–µ–Ω–∏")
    kb.button(text="–°—Ç–∞—Ä—ã–µ –ø—è—Ç–Ω–∞")
    kb.button(text="–ü—Ä–æ—Ä–µ—Ö–∏ –ø–æ —à–≤—É")
    kb.button(text="–û—Ç—Å–ª–æ–µ–Ω–∏–µ –æ—Å–Ω–æ–≤—ã")
    kb.button(text="–î—Ä—É–≥–æ–µ")
    kb.adjust(3, 3, 1)
    
    return kb.as_markup(resize_keyboard=True)


def extra_serv() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.button(text="–£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –ø—è—Ç–µ–Ω")
    kb.button(text="–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Ö–æ–≤ –∏ –º–æ—á–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö")
    kb.button(text="–û–∑–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–≤—Ä–∞")
    kb.button(text="–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Ä—Å–∞")
    kb.button(text="–ö–æ–≤—ë—Ä –ø–æ—Å–ª–µ –ø–æ—Ç–æ–ø–∞")
    kb.button(text="–û—á–∏—Å—Ç–∫–∞ –±–∞—Ö—Ä–æ–º—ã –≤—Ä—É—á–Ω—É—é")
    kb.button(text="–ê–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞")
    kb.button(text="–†–µ–º–æ–Ω—Ç –∫–æ–≤—Ä–∞ (–ª–æ–∫–∞–ª—å–Ω—ã–π)")
    kb.button(text="–û–≤–µ—Ä–ª–æ–∫ (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∞—ë–≤) ")
    kb.button(text="–ù–µ –Ω—É–∂–Ω–æ")
    kb.adjust(6, 3, 1)
    
    return kb.as_markup(resize_keyboard=True)